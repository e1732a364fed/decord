name: Build and Publish to PyPI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2025, macos-13] # macOS 11+ for Apple Silicon support

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # cibuildwheel handles all versions, so we only need one here.

      - name: Install cibuildwheel and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==2.22.0  # Pinned for consistent builds
          python -m pip install pytest  # For running tests after build

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp39-* cp310-* cp311-* cp312-*  # Build for all supported Python versions
          CIBW_SKIP: "*musllinux*"  # Skip musllinux for now. Add if needed.
          CIBW_BEFORE_BUILD: "apt-get update && apt-get install -y --no-install-recommends ffmpeg libavcodec-dev libavfilter-dev libavformat-dev libavutil-dev libswresample-dev  # Linux deps
                               || brew install ffmpeg cmake nasm yasm # macOS deps (CMake, NASM, YASM, for FFmpeg build)
                               || choco install ffmpeg -y" # Windows deps, Chocolatey recommended
          CIBW_ENVIRONMENT: 'DMLC_LOG_STACK_TRACE=0'  # Pass environment variables
          CIBW_TEST_COMMAND: python -m pytest {project}/tests/python/unittests -v
          CIBW_TEST_REQUIRES: pytest numpy

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          path: wheelhouse/*.whl

  publish:
    name: Publish to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # Only publish on tags
    environment:
      name: pypi
      url: https://pypi.org/p/decord
    permissions:
      id-token: write  # Needed for trusted publishing

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheelhouse
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.12


  testpypi:
    name: Publish to TestPyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # Only publish on tags
    environment:
      name: testpypi
      url: https://test.pypi.org/p/decord
    permissions:
      id-token: write  # Needed for trusted publishing

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheelhouse
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1.12
        with:
          repository_url: https://test.pypi.org/